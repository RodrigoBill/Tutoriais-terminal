
Primeiro passo criar login no github.com

Segundo passo instalar o git através do terminal
	- $ sudo apt-get install git-core git-gui git-doc
	
Terceiro passo gerar chave ssh através do terminal
(Necessário para conexão com o repositório criado no git)
	- $ cat ~/.ssh/id_rsa.pub
	- copiar a chave criada
	
Quarto passo acessar o github.com
	- Account Settings
	- SSH Public Key
	- Add another public key
	- Colocar um nome
	- colar chave criada no terminal
	- adicionar a chave
	
Quinto passo testar se a chave foi criada corretamente
	- $ ssh git@github.com
	
Sexto passo configurar usuário Git no terminal
	- $ git config --global user.name "NomeNoGithub"
	- $ git config --global user.mail "EmailNoGithub"

==========================================================================

CRIANDO PROJETO NO GITHUB PELO TERMINAL

Criar um diretorio e transforma-lo em um repositorio
	- $ mkdir ~/YouProjectName (Cria um diretorio).
	- $ cd ~/YouProjectName (Acessa o diretorio).
	- $ git init (Transforma o diretorio em um repositorio GIT).
	- $ touch "YouFileName" (Cria um arquivo dentro do seu repositorio).
	- $ git add "YouFileName" (Adiciona seu arquivo no repositorio GIT).
	- $ git commit -m 'Mensagem de commit' (Prepara as modificacoes para empurrar na master).
	- $ git remote add origin git@github.com:userGithubName/YouRepositoryName.git (Seleciona o repositorio master que deseja alterar).
	- $ git push origin master (Empurra as alteracoes para o repositorio master selecionado antes no comando acima).

============================================================================

CLONAR REPOSITORIO
	- $ cd "Direorio" (Acessar diretorio).
	- $ git clone git@github:userRepositoryName/YouRepositoryName.git

========================================================================

COMANDOS UTEIS EM UM PROJETO GITHUB

	- $ git pull (Atualiza o repositorio local para ficar igual ao que esta no github.com).
	- $ git status (Mostra o que foi modificado, inserido e deletado).
	- $ git add "nomeDoAquivo" (Adiciona ao projeto).
	- $ git log (Mostra o historico de commit).
	- $ git revert "codigoDoCommit"

========================================================================

IGNORAR VERSIONAMENTO (DIRETORIOS OU ARQUIVOS QUE NÃO GOSTARIA DE VERSIONAR)

	- Criar um arquivo .gitigonore e listar o que nao gostaria de versionar
	- $ touch "nomeDoArquivo".gitignore (Cria um arquivo reconhecido pelo git).
	- $ vim "nomeDoArquivo" (Acessa o editor no terminal).
	- Exemplo: digitar target dentro do arquivo.gitignore (Faz com que a pasta target não seja versionada).
